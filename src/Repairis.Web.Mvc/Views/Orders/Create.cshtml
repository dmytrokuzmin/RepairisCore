@model Repairis.Orders.Dto.CreateOrderInput
@{
    ViewBag.Title = "Create";
}
<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h1>New Order</h1>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>DeviceModel:</h4>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Device.DeviceCategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Device.DeviceCategoryName, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.EJ().AutocompleteFor(model => model.Device.DeviceCategoryName).AutocompleteFields(f => f.Text("DeviceCategoryName")).Datasource(Model.OrderViewBagDto.DeviceCategories).ShowPopupButton()*@
                        @Html.ValidationMessageFor(model => model.Device.DeviceCategoryName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Device.BrandName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Device.BrandName, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.EJ().AutocompleteFor(model => model.Device.BrandName).AutocompleteFields(f => f.Text("BrandName")).Datasource(Model.OrderViewBagDto.Brands).ShowPopupButton()*@
                        @Html.ValidationMessageFor(model => model.Device.BrandName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Device.DeviceModelName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Device.DeviceModelName, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.EJ().AutocompleteFor(model => model.Device.DeviceModelName).Datasource(Model.OrderViewBagDto.DeviceModels).AutocompleteFields(f => f.Text("DeviceModelName").GroupBy("Brand.BrandName")).ShowPopupButton()*@
                        @Html.ValidationMessageFor(model => model.Device.DeviceModelName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Device.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Device.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Device.SerialNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>Additional Equipment and issues:</h4>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.AdditionalEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AdditionalEquipment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdditionalEquipment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IssueDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IssueDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IssueDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>Client:</h4>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.CustomerType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Customer.CustomerType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customer.CustomerType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Surname, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Surname, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.Surname, "", new {@class = "text-danger"})
                    </div>
                </div>                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.Name, "", new {@class = "text-danger"})
                    </div>
                </div>                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.FatherName, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.FatherName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.FatherName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.PhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.PhoneNumber, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.SecondaryPhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.SecondaryPhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.SecondaryPhoneNumber, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.EmailAddress, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.EmailAddress, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.EmailAddress, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Address, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Address, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.Address, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.AdditionalInfo, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.AdditionalInfo, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.AdditionalInfo, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>Additional Order Info:</h4>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.AdditionalNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AdditionalNotes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IsUrgent, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.CheckBoxFor(model => model.IsUrgent, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsUrgent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsWarrantyComplaint, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.CheckBoxFor(model => model.IsWarrantyComplaint, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsWarrantyComplaint, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
